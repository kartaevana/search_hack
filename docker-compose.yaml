networks:
  dev:

services:
  app:
    build:
      context: back
      dockerfile: deploy/Dockerfile
    ports:
      - "8080:8080"
    environment:
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
    depends_on:
      postgres-database:
        condition: service_healthy
    volumes:
      - ../../data/app:/app/cmd/log
    networks:
      - dev

  postgres-database:
    image: postgres:latest
    env_file:
      - back/deploy/.env
    ports:
      - "5433:5432"
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -h localhost -p 5432" ]
      interval: 3s
      timeout: 3s
      retries: 100
    volumes:
      - ../../data/postgres:/var/lib/postgresql/data
    networks:
      - dev
